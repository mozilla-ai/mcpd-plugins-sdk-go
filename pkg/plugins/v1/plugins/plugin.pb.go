// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: plugins/plugin.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Flow supported by the plugin.
type Flow int32

const (
	Flow_FLOW_REQUEST  Flow = 0
	Flow_FLOW_RESPONSE Flow = 1
)

// Enum value maps for Flow.
var (
	Flow_name = map[int32]string{
		0: "FLOW_REQUEST",
		1: "FLOW_RESPONSE",
	}
	Flow_value = map[string]int32{
		"FLOW_REQUEST":  0,
		"FLOW_RESPONSE": 1,
	}
)

func (x Flow) Enum() *Flow {
	p := new(Flow)
	*p = x
	return p
}

func (x Flow) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Flow) Descriptor() protoreflect.EnumDescriptor {
	return file_plugins_plugin_proto_enumTypes[0].Descriptor()
}

func (Flow) Type() protoreflect.EnumType {
	return &file_plugins_plugin_proto_enumTypes[0]
}

func (x Flow) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Flow.Descriptor instead.
func (Flow) EnumDescriptor() ([]byte, []int) {
	return file_plugins_plugin_proto_rawDescGZIP(), []int{0}
}

// Metadata about the plugin.
type Metadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CommitHash    string                 `protobuf:"bytes,4,opt,name=commit_hash,json=commitHash,proto3" json:"commit_hash,omitempty"`
	BuildDate     string                 `protobuf:"bytes,5,opt,name=build_date,json=buildDate,proto3" json:"build_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_plugins_plugin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_plugin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_plugins_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *Metadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Metadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Metadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Metadata) GetCommitHash() string {
	if x != nil {
		return x.CommitHash
	}
	return ""
}

func (x *Metadata) GetBuildDate() string {
	if x != nil {
		return x.BuildDate
	}
	return ""
}

// Capabilities declares which flows a plugin supports.
// The repeated field represents a set (no duplicates expected).
type Capabilities struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Flows         []Flow                 `protobuf:"varint,1,rep,packed,name=flows,proto3,enum=mozilla.mcpd.plugins.v1.Flow" json:"flows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Capabilities) Reset() {
	*x = Capabilities{}
	mi := &file_plugins_plugin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Capabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Capabilities) ProtoMessage() {}

func (x *Capabilities) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_plugin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Capabilities.ProtoReflect.Descriptor instead.
func (*Capabilities) Descriptor() ([]byte, []int) {
	return file_plugins_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *Capabilities) GetFlows() []Flow {
	if x != nil {
		return x.Flows
	}
	return nil
}

// HTTPRequest represents an HTTP request for plugin processing.
type HTTPRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Path          string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Simplified: first value only per header
	Body          []byte                 `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	RemoteAddr    string                 `protobuf:"bytes,6,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	RequestUri    string                 `protobuf:"bytes,7,opt,name=request_uri,json=requestUri,proto3" json:"request_uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HTTPRequest) Reset() {
	*x = HTTPRequest{}
	mi := &file_plugins_plugin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HTTPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPRequest) ProtoMessage() {}

func (x *HTTPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_plugin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPRequest.ProtoReflect.Descriptor instead.
func (*HTTPRequest) Descriptor() ([]byte, []int) {
	return file_plugins_plugin_proto_rawDescGZIP(), []int{2}
}

func (x *HTTPRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *HTTPRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *HTTPRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *HTTPRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HTTPRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *HTTPRequest) GetRemoteAddr() string {
	if x != nil {
		return x.RemoteAddr
	}
	return ""
}

func (x *HTTPRequest) GetRequestUri() string {
	if x != nil {
		return x.RequestUri
	}
	return ""
}

// HTTPResponse represents an HTTP response from plugin processing.
type HTTPResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    int32                  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Body          []byte                 `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	Continue      bool                   `protobuf:"varint,4,opt,name=continue,proto3" json:"continue,omitempty"` // If true, continue to next plugin/handler; if false, short-circuit
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HTTPResponse) Reset() {
	*x = HTTPResponse{}
	mi := &file_plugins_plugin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HTTPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPResponse) ProtoMessage() {}

func (x *HTTPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_plugin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPResponse.ProtoReflect.Descriptor instead.
func (*HTTPResponse) Descriptor() ([]byte, []int) {
	return file_plugins_plugin_proto_rawDescGZIP(), []int{3}
}

func (x *HTTPResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *HTTPResponse) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HTTPResponse) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *HTTPResponse) GetContinue() bool {
	if x != nil {
		return x.Continue
	}
	return false
}

// TelemetryConfig provides OpenTelemetry configuration.
type TelemetryConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OtlpEndpoint  string                 `protobuf:"bytes,1,opt,name=otlp_endpoint,json=otlpEndpoint,proto3" json:"otlp_endpoint,omitempty"`
	ServiceName   string                 `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Environment   string                 `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	SampleRatio   float64                `protobuf:"fixed64,4,opt,name=sample_ratio,json=sampleRatio,proto3" json:"sample_ratio,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TelemetryConfig) Reset() {
	*x = TelemetryConfig{}
	mi := &file_plugins_plugin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TelemetryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryConfig) ProtoMessage() {}

func (x *TelemetryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_plugin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryConfig.ProtoReflect.Descriptor instead.
func (*TelemetryConfig) Descriptor() ([]byte, []int) {
	return file_plugins_plugin_proto_rawDescGZIP(), []int{4}
}

func (x *TelemetryConfig) GetOtlpEndpoint() string {
	if x != nil {
		return x.OtlpEndpoint
	}
	return ""
}

func (x *TelemetryConfig) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *TelemetryConfig) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *TelemetryConfig) GetSampleRatio() float64 {
	if x != nil {
		return x.SampleRatio
	}
	return 0
}

// PluginConfig contains host-provided configuration for the plugin.
type PluginConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Telemetry     *TelemetryConfig       `protobuf:"bytes,1,opt,name=telemetry,proto3" json:"telemetry,omitempty"`
	CustomConfig  map[string]string      `protobuf:"bytes,2,rep,name=custom_config,json=customConfig,proto3" json:"custom_config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Plugin-specific config from YAML
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginConfig) Reset() {
	*x = PluginConfig{}
	mi := &file_plugins_plugin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginConfig) ProtoMessage() {}

func (x *PluginConfig) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_plugin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginConfig.ProtoReflect.Descriptor instead.
func (*PluginConfig) Descriptor() ([]byte, []int) {
	return file_plugins_plugin_proto_rawDescGZIP(), []int{5}
}

func (x *PluginConfig) GetTelemetry() *TelemetryConfig {
	if x != nil {
		return x.Telemetry
	}
	return nil
}

func (x *PluginConfig) GetCustomConfig() map[string]string {
	if x != nil {
		return x.CustomConfig
	}
	return nil
}

var File_plugins_plugin_proto protoreflect.FileDescriptor

const file_plugins_plugin_proto_rawDesc = "" +
	"\n" +
	"\x14plugins/plugin.proto\x12\x17mozilla.mcpd.plugins.v1\x1a\x1bgoogle/protobuf/empty.proto\"\x9a\x01\n" +
	"\bMetadata\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1f\n" +
	"\vcommit_hash\x18\x04 \x01(\tR\n" +
	"commitHash\x12\x1d\n" +
	"\n" +
	"build_date\x18\x05 \x01(\tR\tbuildDate\"C\n" +
	"\fCapabilities\x123\n" +
	"\x05flows\x18\x01 \x03(\x0e2\x1d.mozilla.mcpd.plugins.v1.FlowR\x05flows\"\xaa\x02\n" +
	"\vHTTPRequest\x12\x16\n" +
	"\x06method\x18\x01 \x01(\tR\x06method\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12K\n" +
	"\aheaders\x18\x04 \x03(\v21.mozilla.mcpd.plugins.v1.HTTPRequest.HeadersEntryR\aheaders\x12\x12\n" +
	"\x04body\x18\x05 \x01(\fR\x04body\x12\x1f\n" +
	"\vremote_addr\x18\x06 \x01(\tR\n" +
	"remoteAddr\x12\x1f\n" +
	"\vrequest_uri\x18\a \x01(\tR\n" +
	"requestUri\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe9\x01\n" +
	"\fHTTPResponse\x12\x1f\n" +
	"\vstatus_code\x18\x01 \x01(\x05R\n" +
	"statusCode\x12L\n" +
	"\aheaders\x18\x02 \x03(\v22.mozilla.mcpd.plugins.v1.HTTPResponse.HeadersEntryR\aheaders\x12\x12\n" +
	"\x04body\x18\x03 \x01(\fR\x04body\x12\x1a\n" +
	"\bcontinue\x18\x04 \x01(\bR\bcontinue\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9e\x01\n" +
	"\x0fTelemetryConfig\x12#\n" +
	"\rotlp_endpoint\x18\x01 \x01(\tR\fotlpEndpoint\x12!\n" +
	"\fservice_name\x18\x02 \x01(\tR\vserviceName\x12 \n" +
	"\venvironment\x18\x03 \x01(\tR\venvironment\x12!\n" +
	"\fsample_ratio\x18\x04 \x01(\x01R\vsampleRatio\"\xf5\x01\n" +
	"\fPluginConfig\x12F\n" +
	"\ttelemetry\x18\x01 \x01(\v2(.mozilla.mcpd.plugins.v1.TelemetryConfigR\ttelemetry\x12\\\n" +
	"\rcustom_config\x18\x02 \x03(\v27.mozilla.mcpd.plugins.v1.PluginConfig.CustomConfigEntryR\fcustomConfig\x1a?\n" +
	"\x11CustomConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*+\n" +
	"\x04Flow\x12\x10\n" +
	"\fFLOW_REQUEST\x10\x00\x12\x11\n" +
	"\rFLOW_RESPONSE\x10\x012\xe3\x04\n" +
	"\x06Plugin\x12J\n" +
	"\tConfigure\x12%.mozilla.mcpd.plugins.v1.PluginConfig\x1a\x16.google.protobuf.Empty\x126\n" +
	"\x04Stop\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\x12H\n" +
	"\vGetMetadata\x12\x16.google.protobuf.Empty\x1a!.mozilla.mcpd.plugins.v1.Metadata\x12P\n" +
	"\x0fGetCapabilities\x12\x16.google.protobuf.Empty\x1a%.mozilla.mcpd.plugins.v1.Capabilities\x12=\n" +
	"\vCheckHealth\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\x12<\n" +
	"\n" +
	"CheckReady\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\x12\\\n" +
	"\rHandleRequest\x12$.mozilla.mcpd.plugins.v1.HTTPRequest\x1a%.mozilla.mcpd.plugins.v1.HTTPResponse\x12^\n" +
	"\x0eHandleResponse\x12%.mozilla.mcpd.plugins.v1.HTTPResponse\x1a%.mozilla.mcpd.plugins.v1.HTTPResponseBYZ;github.com/mozilla-ai/mcpd-plugins-sdk-go/pkg/plugins/v1;v1\xaa\x02\x19MozillaAI.Mcpd.Plugins.V1b\x06proto3"

var (
	file_plugins_plugin_proto_rawDescOnce sync.Once
	file_plugins_plugin_proto_rawDescData []byte
)

func file_plugins_plugin_proto_rawDescGZIP() []byte {
	file_plugins_plugin_proto_rawDescOnce.Do(func() {
		file_plugins_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_plugins_plugin_proto_rawDesc), len(file_plugins_plugin_proto_rawDesc)))
	})
	return file_plugins_plugin_proto_rawDescData
}

var file_plugins_plugin_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_plugins_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_plugins_plugin_proto_goTypes = []any{
	(Flow)(0),               // 0: mozilla.mcpd.plugins.v1.Flow
	(*Metadata)(nil),        // 1: mozilla.mcpd.plugins.v1.Metadata
	(*Capabilities)(nil),    // 2: mozilla.mcpd.plugins.v1.Capabilities
	(*HTTPRequest)(nil),     // 3: mozilla.mcpd.plugins.v1.HTTPRequest
	(*HTTPResponse)(nil),    // 4: mozilla.mcpd.plugins.v1.HTTPResponse
	(*TelemetryConfig)(nil), // 5: mozilla.mcpd.plugins.v1.TelemetryConfig
	(*PluginConfig)(nil),    // 6: mozilla.mcpd.plugins.v1.PluginConfig
	nil,                     // 7: mozilla.mcpd.plugins.v1.HTTPRequest.HeadersEntry
	nil,                     // 8: mozilla.mcpd.plugins.v1.HTTPResponse.HeadersEntry
	nil,                     // 9: mozilla.mcpd.plugins.v1.PluginConfig.CustomConfigEntry
	(*emptypb.Empty)(nil),   // 10: google.protobuf.Empty
}
var file_plugins_plugin_proto_depIdxs = []int32{
	0,  // 0: mozilla.mcpd.plugins.v1.Capabilities.flows:type_name -> mozilla.mcpd.plugins.v1.Flow
	7,  // 1: mozilla.mcpd.plugins.v1.HTTPRequest.headers:type_name -> mozilla.mcpd.plugins.v1.HTTPRequest.HeadersEntry
	8,  // 2: mozilla.mcpd.plugins.v1.HTTPResponse.headers:type_name -> mozilla.mcpd.plugins.v1.HTTPResponse.HeadersEntry
	5,  // 3: mozilla.mcpd.plugins.v1.PluginConfig.telemetry:type_name -> mozilla.mcpd.plugins.v1.TelemetryConfig
	9,  // 4: mozilla.mcpd.plugins.v1.PluginConfig.custom_config:type_name -> mozilla.mcpd.plugins.v1.PluginConfig.CustomConfigEntry
	6,  // 5: mozilla.mcpd.plugins.v1.Plugin.Configure:input_type -> mozilla.mcpd.plugins.v1.PluginConfig
	10, // 6: mozilla.mcpd.plugins.v1.Plugin.Stop:input_type -> google.protobuf.Empty
	10, // 7: mozilla.mcpd.plugins.v1.Plugin.GetMetadata:input_type -> google.protobuf.Empty
	10, // 8: mozilla.mcpd.plugins.v1.Plugin.GetCapabilities:input_type -> google.protobuf.Empty
	10, // 9: mozilla.mcpd.plugins.v1.Plugin.CheckHealth:input_type -> google.protobuf.Empty
	10, // 10: mozilla.mcpd.plugins.v1.Plugin.CheckReady:input_type -> google.protobuf.Empty
	3,  // 11: mozilla.mcpd.plugins.v1.Plugin.HandleRequest:input_type -> mozilla.mcpd.plugins.v1.HTTPRequest
	4,  // 12: mozilla.mcpd.plugins.v1.Plugin.HandleResponse:input_type -> mozilla.mcpd.plugins.v1.HTTPResponse
	10, // 13: mozilla.mcpd.plugins.v1.Plugin.Configure:output_type -> google.protobuf.Empty
	10, // 14: mozilla.mcpd.plugins.v1.Plugin.Stop:output_type -> google.protobuf.Empty
	1,  // 15: mozilla.mcpd.plugins.v1.Plugin.GetMetadata:output_type -> mozilla.mcpd.plugins.v1.Metadata
	2,  // 16: mozilla.mcpd.plugins.v1.Plugin.GetCapabilities:output_type -> mozilla.mcpd.plugins.v1.Capabilities
	10, // 17: mozilla.mcpd.plugins.v1.Plugin.CheckHealth:output_type -> google.protobuf.Empty
	10, // 18: mozilla.mcpd.plugins.v1.Plugin.CheckReady:output_type -> google.protobuf.Empty
	4,  // 19: mozilla.mcpd.plugins.v1.Plugin.HandleRequest:output_type -> mozilla.mcpd.plugins.v1.HTTPResponse
	4,  // 20: mozilla.mcpd.plugins.v1.Plugin.HandleResponse:output_type -> mozilla.mcpd.plugins.v1.HTTPResponse
	13, // [13:21] is the sub-list for method output_type
	5,  // [5:13] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_plugins_plugin_proto_init() }
func file_plugins_plugin_proto_init() {
	if File_plugins_plugin_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_plugins_plugin_proto_rawDesc), len(file_plugins_plugin_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_plugins_plugin_proto_goTypes,
		DependencyIndexes: file_plugins_plugin_proto_depIdxs,
		EnumInfos:         file_plugins_plugin_proto_enumTypes,
		MessageInfos:      file_plugins_plugin_proto_msgTypes,
	}.Build()
	File_plugins_plugin_proto = out.File
	file_plugins_plugin_proto_goTypes = nil
	file_plugins_plugin_proto_depIdxs = nil
}
